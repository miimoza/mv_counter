ARM GAS  /tmp/ccu0MXav.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB133:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
ARM GAS  /tmp/ccu0MXav.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  50:Core/Src/main.c **** void SystemClock_Config(void);
  51:Core/Src/main.c **** static void MX_GPIO_Init(void);
  52:Core/Src/main.c **** static void MX_TIM2_Init(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  58:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****   * @brief  The application entry point.
  64:Core/Src/main.c ****   * @retval int
  65:Core/Src/main.c ****   */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
ARM GAS  /tmp/ccu0MXav.s 			page 3


  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_TIM2_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Infinite loop */
  96:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  97:Core/Src/main.c ****   while (1)
  98:Core/Src/main.c ****   {
  99:Core/Src/main.c ****     /* USER CODE END WHILE */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 102:Core/Src/main.c ****     if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_2) == GPIO_PIN_SET)
 103:Core/Src/main.c ****     {
 104:Core/Src/main.c ****        HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 105:Core/Src/main.c ****     }
 106:Core/Src/main.c ****     else
 107:Core/Src/main.c ****     {
 108:Core/Src/main.c **** 	     HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 109:Core/Src/main.c ****     }
 110:Core/Src/main.c ****   }
 111:Core/Src/main.c ****   /* USER CODE END 3 */
 112:Core/Src/main.c **** }
 113:Core/Src/main.c **** 
 114:Core/Src/main.c **** /**
 115:Core/Src/main.c ****   * @brief System Clock Configuration
 116:Core/Src/main.c ****   * @retval None
 117:Core/Src/main.c ****   */
 118:Core/Src/main.c **** void SystemClock_Config(void)
 119:Core/Src/main.c **** {
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 127:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 128:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 133:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 134:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135:Core/Src/main.c ****   {
 136:Core/Src/main.c ****     Error_Handler();
 137:Core/Src/main.c ****   }
 138:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 139:Core/Src/main.c ****   */
 140:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 141:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 145:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccu0MXav.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 148:Core/Src/main.c ****   {
 149:Core/Src/main.c ****     Error_Handler();
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c **** }
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** /**
 154:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 155:Core/Src/main.c ****   * @param None
 156:Core/Src/main.c ****   * @retval None
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** static void MX_TIM2_Init(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 166:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 169:Core/Src/main.c **** 
 170:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 171:Core/Src/main.c ****   htim2.Instance = TIM2;
 172:Core/Src/main.c ****   htim2.Init.Prescaler = 8000;
 173:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 174:Core/Src/main.c ****   htim2.Init.Period = 500;
 175:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 176:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 177:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 182:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 183:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     Error_Handler();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 188:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 189:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 190:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 191:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 196:Core/Src/main.c ****   if(HAL_GPIO_ReadPin(GPIOC,GPIO_PIN_2) == GPIO_PIN_SET)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c ****   else
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****      HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
ARM GAS  /tmp/ccu0MXav.s 			page 5


 203:Core/Src/main.c ****   }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** 
 207:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 208:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** }
 211:Core/Src/main.c **** 
 212:Core/Src/main.c **** /**
 213:Core/Src/main.c ****   * @brief GPIO Initialization Function
 214:Core/Src/main.c ****   * @param None
 215:Core/Src/main.c ****   * @retval None
 216:Core/Src/main.c ****   */
 217:Core/Src/main.c **** static void MX_GPIO_Init(void)
 218:Core/Src/main.c **** {
  28              		.loc 1 218 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 219:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 219 3 view .LVU1
  42              		.loc 1 219 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 222:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 222 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 222 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 222 3 view .LVU5
  54 0012 174B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F00402 		orr	r2, r2, #4
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 222 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F00402 		and	r2, r2, #4
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 222 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
ARM GAS  /tmp/ccu0MXav.s 			page 6


  65              		.loc 1 222 3 view .LVU8
 223:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 223 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 223 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 223 3 view .LVU11
  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 223 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 223 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 223 3 view .LVU14
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  82              		.loc 1 226 3 view .LVU15
  83 003a 0E4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 2021     		movs	r1, #32
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /*Configure GPIO pin : PC13 */
 229:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  89              		.loc 1 229 3 view .LVU16
  90              		.loc 1 229 23 is_stmt 0 view .LVU17
  91 0046 4FF40053 		mov	r3, #8192
  92 004a 0393     		str	r3, [sp, #12]
 230:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  93              		.loc 1 230 3 is_stmt 1 view .LVU18
  94              		.loc 1 230 24 is_stmt 0 view .LVU19
  95 004c 0494     		str	r4, [sp, #16]
 231:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  96              		.loc 1 231 3 is_stmt 1 view .LVU20
  97              		.loc 1 231 24 is_stmt 0 view .LVU21
  98 004e 0594     		str	r4, [sp, #20]
 232:Core/Src/main.c ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  99              		.loc 1 232 3 is_stmt 1 view .LVU22
 100 0050 03A9     		add	r1, sp, #12
 101 0052 0948     		ldr	r0, .L3+8
 102 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 235:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
 104              		.loc 1 235 3 view .LVU23
 105              		.loc 1 235 23 is_stmt 0 view .LVU24
 106 0058 2023     		movs	r3, #32
 107 005a 0393     		str	r3, [sp, #12]
 236:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
ARM GAS  /tmp/ccu0MXav.s 			page 7


 108              		.loc 1 236 3 is_stmt 1 view .LVU25
 109              		.loc 1 236 24 is_stmt 0 view .LVU26
 110 005c 0123     		movs	r3, #1
 111 005e 0493     		str	r3, [sp, #16]
 237:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 112              		.loc 1 237 3 is_stmt 1 view .LVU27
 113              		.loc 1 237 24 is_stmt 0 view .LVU28
 114 0060 0594     		str	r4, [sp, #20]
 238:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 115              		.loc 1 238 3 is_stmt 1 view .LVU29
 116              		.loc 1 238 25 is_stmt 0 view .LVU30
 117 0062 0694     		str	r4, [sp, #24]
 239:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 118              		.loc 1 239 3 is_stmt 1 view .LVU31
 119 0064 03A9     		add	r1, sp, #12
 120 0066 2846     		mov	r0, r5
 121 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 122              	.LVL2:
 240:Core/Src/main.c **** 
 241:Core/Src/main.c **** }
 123              		.loc 1 241 1 is_stmt 0 view .LVU32
 124 006c 09B0     		add	sp, sp, #36
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 12
 127              		@ sp needed
 128 006e 30BD     		pop	{r4, r5, pc}
 129              	.L4:
 130              		.align	2
 131              	.L3:
 132 0070 00380240 		.word	1073887232
 133 0074 00000240 		.word	1073872896
 134 0078 00080240 		.word	1073874944
 135              		.cfi_endproc
 136              	.LFE133:
 138              		.section	.text.Error_Handler,"ax",%progbits
 139              		.align	1
 140              		.global	Error_Handler
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 144              		.fpu fpv4-sp-d16
 146              	Error_Handler:
 147              	.LFB134:
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /* USER CODE END 4 */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /**
 248:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 249:Core/Src/main.c ****   * @retval None
 250:Core/Src/main.c ****   */
 251:Core/Src/main.c **** void Error_Handler(void)
 252:Core/Src/main.c **** {
 148              		.loc 1 252 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ Volatile: function does not return.
ARM GAS  /tmp/ccu0MXav.s 			page 8


 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 253:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 254:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 255:Core/Src/main.c ****   __disable_irq();
 154              		.loc 1 255 3 view .LVU34
 155              	.LBB6:
 156              	.LBI6:
 157              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
ARM GAS  /tmp/ccu0MXav.s 			page 9


  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccu0MXav.s 			page 10


 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 158              		.loc 2 140 27 view .LVU35
 159              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 160              		.loc 2 142 3 view .LVU36
 161              		.syntax unified
 162              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 163 0000 72B6     		cpsid i
 164              	@ 0 "" 2
 165              		.thumb
 166              		.syntax unified
 167              	.L6:
 168              	.LBE7:
 169              	.LBE6:
 256:Core/Src/main.c ****   while (1)
 170              		.loc 1 256 3 discriminator 1 view .LVU37
 257:Core/Src/main.c ****   {
 258:Core/Src/main.c ****   }
 171              		.loc 1 258 3 discriminator 1 view .LVU38
 256:Core/Src/main.c ****   while (1)
 172              		.loc 1 256 9 discriminator 1 view .LVU39
ARM GAS  /tmp/ccu0MXav.s 			page 11


 173 0002 FEE7     		b	.L6
 174              		.cfi_endproc
 175              	.LFE134:
 177              		.section	.text.MX_TIM2_Init,"ax",%progbits
 178              		.align	1
 179              		.syntax unified
 180              		.thumb
 181              		.thumb_func
 182              		.fpu fpv4-sp-d16
 184              	MX_TIM2_Init:
 185              	.LFB132:
 159:Core/Src/main.c **** 
 186              		.loc 1 159 1 view -0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 40
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190 0000 00B5     		push	{lr}
 191              	.LCFI3:
 192              		.cfi_def_cfa_offset 4
 193              		.cfi_offset 14, -4
 194 0002 8BB0     		sub	sp, sp, #44
 195              	.LCFI4:
 196              		.cfi_def_cfa_offset 48
 165:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 197              		.loc 1 165 3 view .LVU41
 165:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 198              		.loc 1 165 27 is_stmt 0 view .LVU42
 199 0004 0023     		movs	r3, #0
 200 0006 0893     		str	r3, [sp, #32]
 201 0008 0993     		str	r3, [sp, #36]
 166:Core/Src/main.c **** 
 202              		.loc 1 166 3 is_stmt 1 view .LVU43
 166:Core/Src/main.c **** 
 203              		.loc 1 166 22 is_stmt 0 view .LVU44
 204 000a 0193     		str	r3, [sp, #4]
 205 000c 0293     		str	r3, [sp, #8]
 206 000e 0393     		str	r3, [sp, #12]
 207 0010 0493     		str	r3, [sp, #16]
 208 0012 0593     		str	r3, [sp, #20]
 209 0014 0693     		str	r3, [sp, #24]
 210 0016 0793     		str	r3, [sp, #28]
 171:Core/Src/main.c ****   htim2.Init.Prescaler = 8000;
 211              		.loc 1 171 3 is_stmt 1 view .LVU45
 171:Core/Src/main.c ****   htim2.Init.Prescaler = 8000;
 212              		.loc 1 171 18 is_stmt 0 view .LVU46
 213 0018 1F48     		ldr	r0, .L18
 214 001a 4FF08042 		mov	r2, #1073741824
 215 001e 0260     		str	r2, [r0]
 172:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 216              		.loc 1 172 3 is_stmt 1 view .LVU47
 172:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 217              		.loc 1 172 24 is_stmt 0 view .LVU48
 218 0020 4FF4FA52 		mov	r2, #8000
 219 0024 4260     		str	r2, [r0, #4]
 173:Core/Src/main.c ****   htim2.Init.Period = 500;
 220              		.loc 1 173 3 is_stmt 1 view .LVU49
 173:Core/Src/main.c ****   htim2.Init.Period = 500;
ARM GAS  /tmp/ccu0MXav.s 			page 12


 221              		.loc 1 173 26 is_stmt 0 view .LVU50
 222 0026 8360     		str	r3, [r0, #8]
 174:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 223              		.loc 1 174 3 is_stmt 1 view .LVU51
 174:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 224              		.loc 1 174 21 is_stmt 0 view .LVU52
 225 0028 4FF4FA72 		mov	r2, #500
 226 002c C260     		str	r2, [r0, #12]
 175:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 227              		.loc 1 175 3 is_stmt 1 view .LVU53
 175:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 228              		.loc 1 175 28 is_stmt 0 view .LVU54
 229 002e 0361     		str	r3, [r0, #16]
 176:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 230              		.loc 1 176 3 is_stmt 1 view .LVU55
 176:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 231              		.loc 1 176 32 is_stmt 0 view .LVU56
 232 0030 8361     		str	r3, [r0, #24]
 177:Core/Src/main.c ****   {
 233              		.loc 1 177 3 is_stmt 1 view .LVU57
 177:Core/Src/main.c ****   {
 234              		.loc 1 177 7 is_stmt 0 view .LVU58
 235 0032 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 236              	.LVL3:
 177:Core/Src/main.c ****   {
 237              		.loc 1 177 6 view .LVU59
 238 0036 18BB     		cbnz	r0, .L14
 181:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 239              		.loc 1 181 3 is_stmt 1 view .LVU60
 181:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 240              		.loc 1 181 37 is_stmt 0 view .LVU61
 241 0038 0023     		movs	r3, #0
 242 003a 0893     		str	r3, [sp, #32]
 182:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 243              		.loc 1 182 3 is_stmt 1 view .LVU62
 182:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 244              		.loc 1 182 33 is_stmt 0 view .LVU63
 245 003c 0993     		str	r3, [sp, #36]
 183:Core/Src/main.c ****   {
 246              		.loc 1 183 3 is_stmt 1 view .LVU64
 183:Core/Src/main.c ****   {
 247              		.loc 1 183 7 is_stmt 0 view .LVU65
 248 003e 08A9     		add	r1, sp, #32
 249 0040 1548     		ldr	r0, .L18
 250 0042 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 251              	.LVL4:
 183:Core/Src/main.c ****   {
 252              		.loc 1 183 6 view .LVU66
 253 0046 E8B9     		cbnz	r0, .L15
 187:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 254              		.loc 1 187 3 is_stmt 1 view .LVU67
 187:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 255              		.loc 1 187 20 is_stmt 0 view .LVU68
 256 0048 6023     		movs	r3, #96
 257 004a 0193     		str	r3, [sp, #4]
 188:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 258              		.loc 1 188 3 is_stmt 1 view .LVU69
ARM GAS  /tmp/ccu0MXav.s 			page 13


 188:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 259              		.loc 1 188 19 is_stmt 0 view .LVU70
 260 004c 0022     		movs	r2, #0
 261 004e 0292     		str	r2, [sp, #8]
 189:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 262              		.loc 1 189 3 is_stmt 1 view .LVU71
 189:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 263              		.loc 1 189 24 is_stmt 0 view .LVU72
 264 0050 0392     		str	r2, [sp, #12]
 190:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 265              		.loc 1 190 3 is_stmt 1 view .LVU73
 190:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 266              		.loc 1 190 24 is_stmt 0 view .LVU74
 267 0052 0592     		str	r2, [sp, #20]
 191:Core/Src/main.c ****   {
 268              		.loc 1 191 3 is_stmt 1 view .LVU75
 191:Core/Src/main.c ****   {
 269              		.loc 1 191 7 is_stmt 0 view .LVU76
 270 0054 01A9     		add	r1, sp, #4
 271 0056 1048     		ldr	r0, .L18
 272 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 273              	.LVL5:
 191:Core/Src/main.c ****   {
 274              		.loc 1 191 6 view .LVU77
 275 005c A0B9     		cbnz	r0, .L16
 196:Core/Src/main.c ****   {
 276              		.loc 1 196 3 is_stmt 1 view .LVU78
 196:Core/Src/main.c ****   {
 277              		.loc 1 196 6 is_stmt 0 view .LVU79
 278 005e 0421     		movs	r1, #4
 279 0060 0E48     		ldr	r0, .L18+4
 280 0062 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 281              	.LVL6:
 196:Core/Src/main.c ****   {
 282              		.loc 1 196 5 view .LVU80
 283 0066 0128     		cmp	r0, #1
 284 0068 10D0     		beq	.L17
 202:Core/Src/main.c ****   }
 285              		.loc 1 202 6 is_stmt 1 view .LVU81
 286 006a 0122     		movs	r2, #1
 287 006c 2021     		movs	r1, #32
 288 006e 0C48     		ldr	r0, .L18+8
 289 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 290              	.LVL7:
 291              	.L12:
 208:Core/Src/main.c **** 
 292              		.loc 1 208 3 view .LVU82
 293 0074 0848     		ldr	r0, .L18
 294 0076 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 295              	.LVL8:
 210:Core/Src/main.c **** 
 296              		.loc 1 210 1 is_stmt 0 view .LVU83
 297 007a 0BB0     		add	sp, sp, #44
 298              	.LCFI5:
 299              		.cfi_remember_state
 300              		.cfi_def_cfa_offset 4
 301              		@ sp needed
ARM GAS  /tmp/ccu0MXav.s 			page 14


 302 007c 5DF804FB 		ldr	pc, [sp], #4
 303              	.L14:
 304              	.LCFI6:
 305              		.cfi_restore_state
 179:Core/Src/main.c ****   }
 306              		.loc 1 179 5 is_stmt 1 view .LVU84
 307 0080 FFF7FEFF 		bl	Error_Handler
 308              	.LVL9:
 309              	.L15:
 185:Core/Src/main.c ****   }
 310              		.loc 1 185 5 view .LVU85
 311 0084 FFF7FEFF 		bl	Error_Handler
 312              	.LVL10:
 313              	.L16:
 193:Core/Src/main.c ****   }
 314              		.loc 1 193 5 view .LVU86
 315 0088 FFF7FEFF 		bl	Error_Handler
 316              	.LVL11:
 317              	.L17:
 198:Core/Src/main.c ****   }
 318              		.loc 1 198 6 view .LVU87
 319 008c 0022     		movs	r2, #0
 320 008e 2021     		movs	r1, #32
 321 0090 0348     		ldr	r0, .L18+8
 322 0092 FFF7FEFF 		bl	HAL_GPIO_WritePin
 323              	.LVL12:
 324 0096 EDE7     		b	.L12
 325              	.L19:
 326              		.align	2
 327              	.L18:
 328 0098 00000000 		.word	.LANCHOR0
 329 009c 00080240 		.word	1073874944
 330 00a0 00000240 		.word	1073872896
 331              		.cfi_endproc
 332              	.LFE132:
 334              		.section	.text.SystemClock_Config,"ax",%progbits
 335              		.align	1
 336              		.global	SystemClock_Config
 337              		.syntax unified
 338              		.thumb
 339              		.thumb_func
 340              		.fpu fpv4-sp-d16
 342              	SystemClock_Config:
 343              	.LFB131:
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 344              		.loc 1 119 1 view -0
 345              		.cfi_startproc
 346              		@ args = 0, pretend = 0, frame = 80
 347              		@ frame_needed = 0, uses_anonymous_args = 0
 348 0000 00B5     		push	{lr}
 349              	.LCFI7:
 350              		.cfi_def_cfa_offset 4
 351              		.cfi_offset 14, -4
 352 0002 95B0     		sub	sp, sp, #84
 353              	.LCFI8:
 354              		.cfi_def_cfa_offset 88
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
ARM GAS  /tmp/ccu0MXav.s 			page 15


 355              		.loc 1 120 3 view .LVU89
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 356              		.loc 1 120 22 is_stmt 0 view .LVU90
 357 0004 3022     		movs	r2, #48
 358 0006 0021     		movs	r1, #0
 359 0008 08A8     		add	r0, sp, #32
 360 000a FFF7FEFF 		bl	memset
 361              	.LVL13:
 121:Core/Src/main.c **** 
 362              		.loc 1 121 3 is_stmt 1 view .LVU91
 121:Core/Src/main.c **** 
 363              		.loc 1 121 22 is_stmt 0 view .LVU92
 364 000e 0023     		movs	r3, #0
 365 0010 0393     		str	r3, [sp, #12]
 366 0012 0493     		str	r3, [sp, #16]
 367 0014 0593     		str	r3, [sp, #20]
 368 0016 0693     		str	r3, [sp, #24]
 369 0018 0793     		str	r3, [sp, #28]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 370              		.loc 1 125 3 is_stmt 1 view .LVU93
 371              	.LBB8:
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 372              		.loc 1 125 3 view .LVU94
 373 001a 0193     		str	r3, [sp, #4]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 374              		.loc 1 125 3 view .LVU95
 375 001c 194A     		ldr	r2, .L26
 376 001e 116C     		ldr	r1, [r2, #64]
 377 0020 41F08051 		orr	r1, r1, #268435456
 378 0024 1164     		str	r1, [r2, #64]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 379              		.loc 1 125 3 view .LVU96
 380 0026 126C     		ldr	r2, [r2, #64]
 381 0028 02F08052 		and	r2, r2, #268435456
 382 002c 0192     		str	r2, [sp, #4]
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 383              		.loc 1 125 3 view .LVU97
 384 002e 019A     		ldr	r2, [sp, #4]
 385              	.LBE8:
 125:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 386              		.loc 1 125 3 view .LVU98
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 387              		.loc 1 126 3 view .LVU99
 388              	.LBB9:
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 389              		.loc 1 126 3 view .LVU100
 390 0030 0293     		str	r3, [sp, #8]
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 391              		.loc 1 126 3 view .LVU101
 392 0032 1549     		ldr	r1, .L26+4
 393 0034 0A68     		ldr	r2, [r1]
 394 0036 22F44042 		bic	r2, r2, #49152
 395 003a 42F40042 		orr	r2, r2, #32768
 396 003e 0A60     		str	r2, [r1]
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 397              		.loc 1 126 3 view .LVU102
 398 0040 0A68     		ldr	r2, [r1]
ARM GAS  /tmp/ccu0MXav.s 			page 16


 399 0042 02F44042 		and	r2, r2, #49152
 400 0046 0292     		str	r2, [sp, #8]
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 401              		.loc 1 126 3 view .LVU103
 402 0048 029A     		ldr	r2, [sp, #8]
 403              	.LBE9:
 126:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 404              		.loc 1 126 3 view .LVU104
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 405              		.loc 1 130 3 view .LVU105
 130:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 406              		.loc 1 130 36 is_stmt 0 view .LVU106
 407 004a 0222     		movs	r2, #2
 408 004c 0892     		str	r2, [sp, #32]
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 409              		.loc 1 131 3 is_stmt 1 view .LVU107
 131:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 410              		.loc 1 131 30 is_stmt 0 view .LVU108
 411 004e 0122     		movs	r2, #1
 412 0050 0B92     		str	r2, [sp, #44]
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 413              		.loc 1 132 3 is_stmt 1 view .LVU109
 132:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 414              		.loc 1 132 41 is_stmt 0 view .LVU110
 415 0052 1022     		movs	r2, #16
 416 0054 0C92     		str	r2, [sp, #48]
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 417              		.loc 1 133 3 is_stmt 1 view .LVU111
 133:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 418              		.loc 1 133 34 is_stmt 0 view .LVU112
 419 0056 0E93     		str	r3, [sp, #56]
 134:Core/Src/main.c ****   {
 420              		.loc 1 134 3 is_stmt 1 view .LVU113
 134:Core/Src/main.c ****   {
 421              		.loc 1 134 7 is_stmt 0 view .LVU114
 422 0058 08A8     		add	r0, sp, #32
 423 005a FFF7FEFF 		bl	HAL_RCC_OscConfig
 424              	.LVL14:
 134:Core/Src/main.c ****   {
 425              		.loc 1 134 6 view .LVU115
 426 005e 68B9     		cbnz	r0, .L24
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 427              		.loc 1 140 3 is_stmt 1 view .LVU116
 140:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 428              		.loc 1 140 31 is_stmt 0 view .LVU117
 429 0060 0F23     		movs	r3, #15
 430 0062 0393     		str	r3, [sp, #12]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 431              		.loc 1 142 3 is_stmt 1 view .LVU118
 142:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 432              		.loc 1 142 34 is_stmt 0 view .LVU119
 433 0064 0021     		movs	r1, #0
 434 0066 0491     		str	r1, [sp, #16]
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 435              		.loc 1 143 3 is_stmt 1 view .LVU120
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 436              		.loc 1 143 35 is_stmt 0 view .LVU121
ARM GAS  /tmp/ccu0MXav.s 			page 17


 437 0068 0591     		str	r1, [sp, #20]
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 438              		.loc 1 144 3 is_stmt 1 view .LVU122
 144:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 439              		.loc 1 144 36 is_stmt 0 view .LVU123
 440 006a 0691     		str	r1, [sp, #24]
 145:Core/Src/main.c **** 
 441              		.loc 1 145 3 is_stmt 1 view .LVU124
 145:Core/Src/main.c **** 
 442              		.loc 1 145 36 is_stmt 0 view .LVU125
 443 006c 0791     		str	r1, [sp, #28]
 147:Core/Src/main.c ****   {
 444              		.loc 1 147 3 is_stmt 1 view .LVU126
 147:Core/Src/main.c ****   {
 445              		.loc 1 147 7 is_stmt 0 view .LVU127
 446 006e 03A8     		add	r0, sp, #12
 447 0070 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 448              	.LVL15:
 147:Core/Src/main.c ****   {
 449              		.loc 1 147 6 view .LVU128
 450 0074 20B9     		cbnz	r0, .L25
 151:Core/Src/main.c **** 
 451              		.loc 1 151 1 view .LVU129
 452 0076 15B0     		add	sp, sp, #84
 453              	.LCFI9:
 454              		.cfi_remember_state
 455              		.cfi_def_cfa_offset 4
 456              		@ sp needed
 457 0078 5DF804FB 		ldr	pc, [sp], #4
 458              	.L24:
 459              	.LCFI10:
 460              		.cfi_restore_state
 136:Core/Src/main.c ****   }
 461              		.loc 1 136 5 is_stmt 1 view .LVU130
 462 007c FFF7FEFF 		bl	Error_Handler
 463              	.LVL16:
 464              	.L25:
 149:Core/Src/main.c ****   }
 465              		.loc 1 149 5 view .LVU131
 466 0080 FFF7FEFF 		bl	Error_Handler
 467              	.LVL17:
 468              	.L27:
 469              		.align	2
 470              	.L26:
 471 0084 00380240 		.word	1073887232
 472 0088 00700040 		.word	1073770496
 473              		.cfi_endproc
 474              	.LFE131:
 476              		.section	.text.main,"ax",%progbits
 477              		.align	1
 478              		.global	main
 479              		.syntax unified
 480              		.thumb
 481              		.thumb_func
 482              		.fpu fpv4-sp-d16
 484              	main:
 485              	.LFB130:
ARM GAS  /tmp/ccu0MXav.s 			page 18


  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 486              		.loc 1 67 1 view -0
 487              		.cfi_startproc
 488              		@ Volatile: function does not return.
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491 0000 08B5     		push	{r3, lr}
 492              	.LCFI11:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 3, -8
 495              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 496              		.loc 1 75 3 view .LVU133
 497 0002 FFF7FEFF 		bl	HAL_Init
 498              	.LVL18:
  82:Core/Src/main.c **** 
 499              		.loc 1 82 3 view .LVU134
 500 0006 FFF7FEFF 		bl	SystemClock_Config
 501              	.LVL19:
  89:Core/Src/main.c ****   MX_TIM2_Init();
 502              		.loc 1 89 3 view .LVU135
 503 000a FFF7FEFF 		bl	MX_GPIO_Init
 504              	.LVL20:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 505              		.loc 1 90 3 view .LVU136
 506 000e FFF7FEFF 		bl	MX_TIM2_Init
 507              	.LVL21:
 508 0012 04E0     		b	.L29
 509              	.L33:
 104:Core/Src/main.c ****     }
 510              		.loc 1 104 8 view .LVU137
 511 0014 0022     		movs	r2, #0
 512 0016 2021     		movs	r1, #32
 513 0018 0748     		ldr	r0, .L34
 514 001a FFF7FEFF 		bl	HAL_GPIO_WritePin
 515              	.LVL22:
 516              	.L29:
  97:Core/Src/main.c ****   {
 517              		.loc 1 97 3 view .LVU138
 102:Core/Src/main.c ****     {
 518              		.loc 1 102 5 view .LVU139
 102:Core/Src/main.c ****     {
 519              		.loc 1 102 8 is_stmt 0 view .LVU140
 520 001e 0421     		movs	r1, #4
 521 0020 0648     		ldr	r0, .L34+4
 522 0022 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 523              	.LVL23:
 102:Core/Src/main.c ****     {
 524              		.loc 1 102 7 view .LVU141
 525 0026 0128     		cmp	r0, #1
 526 0028 F4D0     		beq	.L33
 108:Core/Src/main.c ****     }
 527              		.loc 1 108 7 is_stmt 1 view .LVU142
 528 002a 0122     		movs	r2, #1
 529 002c 2021     		movs	r1, #32
 530 002e 0248     		ldr	r0, .L34
 531 0030 FFF7FEFF 		bl	HAL_GPIO_WritePin
ARM GAS  /tmp/ccu0MXav.s 			page 19


 532              	.LVL24:
 533 0034 F3E7     		b	.L29
 534              	.L35:
 535 0036 00BF     		.align	2
 536              	.L34:
 537 0038 00000240 		.word	1073872896
 538 003c 00080240 		.word	1073874944
 539              		.cfi_endproc
 540              	.LFE130:
 542              		.global	htim2
 543              		.section	.bss.htim2,"aw",%nobits
 544              		.align	2
 545              		.set	.LANCHOR0,. + 0
 548              	htim2:
 549 0000 00000000 		.space	64
 549      00000000 
 549      00000000 
 549      00000000 
 549      00000000 
 550              		.text
 551              	.Letext0:
 552              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 553              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 554              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f401xe.h"
 555              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 556              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 557              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 558              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 559              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 560              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 561              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 562              		.file 13 "Core/Inc/main.h"
 563              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 564              		.file 15 "<built-in>"
ARM GAS  /tmp/ccu0MXav.s 			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccu0MXav.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccu0MXav.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccu0MXav.s:132    .text.MX_GPIO_Init:0000000000000070 $d
     /tmp/ccu0MXav.s:139    .text.Error_Handler:0000000000000000 $t
     /tmp/ccu0MXav.s:146    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccu0MXav.s:178    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccu0MXav.s:184    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccu0MXav.s:328    .text.MX_TIM2_Init:0000000000000098 $d
     /tmp/ccu0MXav.s:335    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccu0MXav.s:342    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccu0MXav.s:471    .text.SystemClock_Config:0000000000000084 $d
     /tmp/ccu0MXav.s:477    .text.main:0000000000000000 $t
     /tmp/ccu0MXav.s:484    .text.main:0000000000000000 main
     /tmp/ccu0MXav.s:537    .text.main:0000000000000038 $d
     /tmp/ccu0MXav.s:548    .bss.htim2:0000000000000000 htim2
     /tmp/ccu0MXav.s:544    .bss.htim2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_GPIO_ReadPin
HAL_TIM_MspPostInit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
